<?xml version="1.0" encoding="utf-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
           elementFormDefault="qualified"
           xmlns="http://sites.google.com/site/printmiles/Odin"
           targetNamespace="http://sites.google.com/site/printmiles/Odin">
<!--
Name:           Response
Version:        2
Author:         Alexander J. Harris
Project:        Open Document and Information Network (Odin)
Last Modified:  12-Apr-2011
-->
  <xs:element name="response">
    <xs:complexType>
      <!-- This is for any type of response from Odin to its clients (Sleipnir) -->
      <xs:sequence>
        <!-- The response back from the server we MUST have a status but the appendix is optional and dependant on the status -->
        <xs:element name="status" minOccurs="1" maxOccurs="1">
          <xs:complexType>
            <xs:all>
              <!-- Codes will correspond to their HTTP equivalents -->
              <xs:element name="code" type="xs:integer" minOccurs="1" maxOccurs="1"/>
              <xs:element name="message" type="xs:string" minOccurs="1" maxOccurs="1"/>
              <xs:element name="description" type="xs:string" minOccurs="1" maxOccurs="1"/>
            </xs:all>
          </xs:complexType>
        </xs:element>
        <xs:element name="appendix" minOccurs="0" maxOccurs="1">
          <xs:complexType>
            <xs:choice>
              <!-- The Guid element should be returned when a document has been uploaded.
                   If the document has been stored successfully then the guid allocated by Odin
                   will be returned here along with a status of 200 (OK). -->
              <xs:element name="guid" type="xs:string" maxOccurs="1"/>
              <!-- The trust element is returned in response to queries for a servers trust score -->
              <xs:element name="trust" maxOccurs="1">
                <xs:complexType>
                  <xs:choice>
                    <!-- If the server is known then a code of 200 (OK) will be returned above
                         with the score of the server in this field -->
                    <xs:element name="trust" type="xs:integer" maxOccurs="1"/>
                    <!-- If the server is not known then a code of 403 (Forbidden) will be
                         returned above along with one or more other server URLs to contact -->
                    <xs:element name="alternatives" maxOccurs="1">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="server" type="xs:anyURI" minOccurs="1" maxOccurs="unbounded"/>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                  </xs:choice>
                </xs:complexType>
              </xs:element>
              <xs:element name="info" maxOccurs="1">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="sleipnirUri" type="xs:anyURI" minOccurs="1" maxOccurs="1"/>
                    <xs:element name="odinUri" type="xs:anyURI" minOccurs="1" maxOccurs="1"/>
                    <xs:element name="name" type="xs:anyURI" minOccurs="1" maxOccurs="1"/>
                    <xs:element name="website" type="xs:anyURI" minOccurs="1" maxOccurs="1"/>
                    <xs:element name="email" type="xs:string" minOccurs="1" maxOccurs="1"/>
                    <xs:element name="phone" type="xs:string" minOccurs="1" maxOccurs="1"/>
                    <xs:element name="adminName" type="xs:string" minOccurs="1" maxOccurs="1"/>
                    <xs:element name="barcodeUri" type="xs:anyURI" minOccurs="1" maxOccurs="1"/>
                    <xs:element name="subjects" minOccurs="1" maxOccurs="1">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="subject" type="xs:string" minOccurs="1" maxOccurs="unbounded"/>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="policies" minOccurs="1" maxOccurs="1">
                      <xs:complexType>
                        <xs:all>
                          <xs:element name="zip" minOccurs="1" maxOccurs="1">
                            <xs:complexType>
                              <xs:sequence>
                                <!-- Reject any archives (identified through MIME) -->
                                <xs:element name="reject" type="xs:boolean" maxOccurs="1"/>
                                <!-- Store the archive intact -->
                                <xs:element name="store" type="xs:boolean" maxOccurs="1"/>
                                <!-- Extract the files from ZIP or GZIP archives and store individually -->
                                <xs:element name="extract" type="xs:boolean" maxOccurs="1"/>
                                <!-- Both the STORE and EXTRACT tags can be present together.
                                This would be interpreted as Extract from GZIP/ZIP files
                                and store any other archive format (which can't be opened by Java).
                                If only the EXTRACT tag is present then files that can't be extracted
                                will be rejected by the server.
                                If the REJECT tag is also present then this will take precedent over all others. -->
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="xml" minOccurs="1" maxOccurs="1">
                            <xs:complexType>
                              <xs:choice>
                                <!-- Reject any XML files -->
                                <xs:element name="reject" type="xs:boolean" maxOccurs="1"/>
                                <!-- Accept all XML files -->
                                <xs:element name="all" type="xs:boolean" maxOccurs="1"/>
                                <!-- Accept only those XML files that are fully namespace qualified. -->
                                <xs:element name="namespace" type="xs:boolean" maxOccurs="1"/>
                              </xs:choice>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="trust" minOccurs="1" maxOccurs="1">
                            <xs:complexType>
                              <xs:all>
                                <!-- Reject rules and server connections having Trust Scores below this -->
                                <xs:element name="reject" type="xs:integer" minOccurs="1" maxOccurs="1"/>
                                <!-- Automatically allow rules to run if they have scores above this -->
                                <xs:element name="accept" type="xs:integer" minOccurs="1" maxOccurs="1"/>
                              </xs:all>
                            </xs:complexType>
                          </xs:element>
                        </xs:all>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
            </xs:choice>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
</xs:schema>