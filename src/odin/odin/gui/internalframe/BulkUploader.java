/* Class name: BulkUploader
 * File name:  BulkUploader.java
 * Project:    Open Document and Information Network (Odin)
 ** Copyright:  Â© 2007-2012 Alexander J. Harris, all rights reserved
 * Created:    01-Jun-2011 17:06:05
 * Modified:   01-Jun-2011
 *
 * Version History:
 * ~ ~ ~ ~ ~ ~ ~ ~ ~
 * 0.001  01-Jun-2011 Initial build
 */

package odin.odin.gui.internalframe;

import java.io.*;
import java.util.*;
import java.util.logging.*;
import javax.swing.*;
import odin.odin.gui.OdinClient;
import odin.odin.gui.workers.MetadataWorker;
import odin.odin.object.logging.LoggerFactory;
import odin.odin.object.table.GenericTable;
import odin.shared.xml.*;

/**
 * Used to parse a folder and its contents and import them into the repository.
 * @version 0.001
 * @author Alexander J. Harris (email: Alexander.J.Harris(at)btinternet.com)
 */

public class BulkUploader extends JInternalFrame
{
  private File baseDirectory;
  private Document.Metadata.Author commonAuthor;
  private Document.Metadata.Keywords commonKeywords;
  private boolean shouldSearchSubdirectories;
  private GenericTable gtResults;
  private Logger log;
  private int lastRow;

  /** Creates new form BulkUploader */
  public BulkUploader()
  {
    super("Bulk Uploader", true, true, true, true);
    super.setLayer(1);
    // Obtain an instance of Logger for the class
    log = LoggerFactory.getLogger(getClass().getName());
    initComponents();
    OdinClient.getOdinWindow().addToDesktop(this);
    this.setVisible(true);
  }
  
  /**
   * Separates keywords supplied by the user and creates a Keywords object
   */
  private void populateKeywords()
  {
    if (!(jtaKeywords.getText().trim()).equals(""))
    {
      StringTokenizer st = new StringTokenizer(jtaKeywords.getText(),";");
      while (st.hasMoreTokens())
      {
        commonKeywords.getKeyword().add((String) st.nextToken());
      }
    }
  }
  
  /**
   * Translates the supplied details for the author into a relevant object
   */
  private void populateAuthor()
  {
    commonAuthor.setFirstName(jtfFirstName.getText());
    commonAuthor.setSurname(jtfSurname.getText());
    commonAuthor.setCompany(jtfCompany.getText());
    commonAuthor.setEmail(jtfEmail.getText());
    commonAuthor.setWebsite(jtfWebsite.getText());
    commonAuthor.setPrefix((String) jcbPrefix.getSelectedItem());
  }

  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    jbUpload = new javax.swing.JButton();
    jpAuthor = new javax.swing.JPanel();
    jtfFirstName = new javax.swing.JTextField();
    jLabel3 = new javax.swing.JLabel();
    jLabel4 = new javax.swing.JLabel();
    jtfSurname = new javax.swing.JTextField();
    jLabel5 = new javax.swing.JLabel();
    jtfCompany = new javax.swing.JTextField();
    jLabel6 = new javax.swing.JLabel();
    jtfEmail = new javax.swing.JTextField();
    jLabel7 = new javax.swing.JLabel();
    jtfWebsite = new javax.swing.JTextField();
    jLabel8 = new javax.swing.JLabel();
    jcbPrefix = new javax.swing.JComboBox();
    jPanel1 = new javax.swing.JPanel();
    jcbSubdir = new javax.swing.JCheckBox();
    jbSelectDir = new javax.swing.JButton();
    jlFolder = new javax.swing.JLabel();
    jPanel2 = new javax.swing.JPanel();
    jScrollPane1 = new javax.swing.JScrollPane();
    jtaKeywords = new javax.swing.JTextArea();

    setTitle("Bulk upload");

    jbUpload.setText("Bulk Upload");
    jbUpload.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jbUploadActionPerformed(evt);
      }
    });

    jpAuthor.setBorder(javax.swing.BorderFactory.createTitledBorder("Author's details"));

    jLabel3.setText("First name");

    jLabel4.setText("Surname");

    jLabel5.setText("Organisation");

    jLabel6.setText("Email");

    jLabel7.setText("Web-site");

    jLabel8.setText("Prefix");

    jcbPrefix.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-None-", "Mr", "Mrs", "Ms", "Miss", "Dr", "Prof", "Sir", "Rev", "Lady" }));

    javax.swing.GroupLayout jpAuthorLayout = new javax.swing.GroupLayout(jpAuthor);
    jpAuthor.setLayout(jpAuthorLayout);
    jpAuthorLayout.setHorizontalGroup(
      jpAuthorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jpAuthorLayout.createSequentialGroup()
        .addContainerGap()
        .addGroup(jpAuthorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
          .addComponent(jLabel3)
          .addComponent(jLabel8)
          .addComponent(jLabel4)
          .addComponent(jLabel7)
          .addComponent(jLabel6)
          .addComponent(jLabel5))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
        .addGroup(jpAuthorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(jtfWebsite, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 372, Short.MAX_VALUE)
          .addComponent(jtfEmail, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 372, Short.MAX_VALUE)
          .addComponent(jtfCompany, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 372, Short.MAX_VALUE)
          .addComponent(jtfSurname, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 372, Short.MAX_VALUE)
          .addComponent(jtfFirstName, javax.swing.GroupLayout.DEFAULT_SIZE, 372, Short.MAX_VALUE)
          .addComponent(jcbPrefix, 0, 372, Short.MAX_VALUE))
        .addContainerGap())
    );
    jpAuthorLayout.setVerticalGroup(
      jpAuthorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jpAuthorLayout.createSequentialGroup()
        .addGap(11, 11, 11)
        .addGroup(jpAuthorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jcbPrefix, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(jLabel8))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(jpAuthorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jLabel3)
          .addComponent(jtfFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addGap(6, 6, 6)
        .addGroup(jpAuthorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jtfSurname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(jLabel4))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(jpAuthorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jtfCompany, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(jLabel5))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(jpAuthorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jtfEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(jLabel6))
        .addGap(8, 8, 8)
        .addGroup(jpAuthorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jtfWebsite, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(jLabel7))
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Selected folder"));

    jcbSubdir.setText("Scan subdirectories");

    jbSelectDir.setText("Select Directory");
    jbSelectDir.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jbSelectDirActionPerformed(evt);
      }
    });

    jlFolder.setText("Please select a folder to scan.");

    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
    jPanel1.setLayout(jPanel1Layout);
    jPanel1Layout.setHorizontalGroup(
      jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel1Layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(jlFolder, javax.swing.GroupLayout.DEFAULT_SIZE, 443, Short.MAX_VALUE)
          .addGroup(jPanel1Layout.createSequentialGroup()
            .addComponent(jbSelectDir)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 215, Short.MAX_VALUE)
            .addComponent(jcbSubdir)))
        .addContainerGap())
    );
    jPanel1Layout.setVerticalGroup(
      jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
        .addComponent(jlFolder)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jcbSubdir)
          .addComponent(jbSelectDir))
        .addContainerGap())
    );

    jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("General keywords (seperated with ;)"));

    jtaKeywords.setColumns(20);
    jtaKeywords.setRows(5);
    jScrollPane1.setViewportView(jtaKeywords);

    javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
    jPanel2.setLayout(jPanel2Layout);
    jPanel2Layout.setHorizontalGroup(
      jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel2Layout.createSequentialGroup()
        .addContainerGap()
        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 443, Short.MAX_VALUE)
        .addContainerGap())
    );
    jPanel2Layout.setVerticalGroup(
      jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel2Layout.createSequentialGroup()
        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 96, Short.MAX_VALUE)
        .addContainerGap())
    );

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
          .addComponent(jpAuthor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
          .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
          .addComponent(jbUpload, javax.swing.GroupLayout.Alignment.TRAILING))
        .addContainerGap())
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(jpAuthor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(jbUpload)
        .addContainerGap(23, Short.MAX_VALUE))
    );

    pack();
  }// </editor-fold>//GEN-END:initComponents

  private void jbUploadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbUploadActionPerformed
    ObjectFactory sharedFactory = new ObjectFactory();
    commonAuthor = sharedFactory.createDocumentMetadataAuthor();
    commonKeywords = sharedFactory.createDocumentMetadataKeywords();
    populateKeywords();
    populateAuthor();
    shouldSearchSubdirectories = jcbSubdir.isSelected();
    gtResults = new GenericTable();
    ArrayList<String> alColumns = new ArrayList<String>();
    alColumns.add("File Name");
    alColumns.add("Progress");
    alColumns.add("Language");
    alColumns.add("Comment");
    ArrayList<Object[]> alRow = new ArrayList<Object[]>();
    alRow.add(new Object[]{"?",0,"?","?"});
    gtResults.setData(alColumns, alRow);
    BulkUploadFrame bufResultWindow = new BulkUploadFrame("Bulk Upload",gtResults);
    log.log(Level.FINE, "Performing bulk upload on directory: {0}", baseDirectory.getAbsolutePath());
    gtResults.removeRow(0);
    lastRow = 0;
    iterate(baseDirectory);
    
  }//GEN-LAST:event_jbUploadActionPerformed

  private void jbSelectDirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSelectDirActionPerformed
    JFileChooser jFC = new JFileChooser();
    jFC.setDialogTitle("Choose folder to scan for files:");
    jFC.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
    jFC.setCurrentDirectory(new File(this.getClass().toString()));
    int returnVal = jFC.showOpenDialog(this);
    if (returnVal == 1)
    {
      // User cancelled their selection
      return;
    }
    baseDirectory = jFC.getSelectedFile();
    if (baseDirectory.exists())
    {
      jlFolder.setText(baseDirectory.getAbsolutePath());
      this.repaint();
    }
    else
    {
      jlFolder.setText("No folder selected.");
    }
  }//GEN-LAST:event_jbSelectDirActionPerformed

  /**
   * Run through the files within a folder and generates a Metadata worker for each file found
   * @param aFile 
   */
  private void iterate(File aFile)
  {
    for (File g : aFile.listFiles())
    {
      if (g.isDirectory())
      {
        if (shouldSearchSubdirectories) { iterate(g); }
      }
      else
      {
        gtResults.addRow(new Object[]{g.getAbsolutePath(),0,"?","?"});
        MetadataWorker mwFile = new MetadataWorker(g, commonAuthor, commonKeywords, gtResults, lastRow);
        mwFile.execute();
        lastRow++;
      }
    }
  }
  
  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JLabel jLabel3;
  private javax.swing.JLabel jLabel4;
  private javax.swing.JLabel jLabel5;
  private javax.swing.JLabel jLabel6;
  private javax.swing.JLabel jLabel7;
  private javax.swing.JLabel jLabel8;
  private javax.swing.JPanel jPanel1;
  private javax.swing.JPanel jPanel2;
  private javax.swing.JScrollPane jScrollPane1;
  private javax.swing.JButton jbSelectDir;
  private javax.swing.JButton jbUpload;
  private javax.swing.JComboBox jcbPrefix;
  private javax.swing.JCheckBox jcbSubdir;
  private javax.swing.JLabel jlFolder;
  private javax.swing.JPanel jpAuthor;
  private javax.swing.JTextArea jtaKeywords;
  private javax.swing.JTextField jtfCompany;
  private javax.swing.JTextField jtfEmail;
  private javax.swing.JTextField jtfFirstName;
  private javax.swing.JTextField jtfSurname;
  private javax.swing.JTextField jtfWebsite;
  // End of variables declaration//GEN-END:variables
}
